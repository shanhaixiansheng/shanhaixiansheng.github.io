<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python笔记2</title>
      <link href="/post/a6733633.html"/>
      <url>/post/a6733633.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="else语句练习"><a href="#else语句练习" class="headerlink" title="else语句练习"></a>else语句练习</h1><p>通过for语句进行循环，通过定义pwd，打印输出“请输入密码”由if语句进行判断，当pwd等于9999，当input输入值为9999即为密码正确，else（否则）密码不正确。等错误三次后，外部的else语句，就会执行，同时退出代码运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 开发时间：2023/2/13 19:41</span><br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    pwd=<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入密码&#x27;</span>)<br>    <span class="hljs-keyword">if</span> pwd==<span class="hljs-string">&#x27;9999&#x27;</span>:<br>         <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码正确&#x27;</span>)<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码不正确&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;对不起，三次均为错误&#x27;</span>)<br></code></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://s1.ax1x.com/2023/02/13/pSoNWz8.png"> </p><h2 id="训练2"><a href="#训练2" class="headerlink" title="训练2"></a>训练2</h2><p>套入while语句，定义变量a,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-number">0</span>  <span class="hljs-comment">#初始化变量</span><br><span class="hljs-keyword">while</span> a&lt;<span class="hljs-number">3</span>:  <br>    pwd=<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入密码&#x27;</span>)<br>    <span class="hljs-keyword">if</span> pwd==<span class="hljs-string">&#x27;000&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码正确&#x27;</span>)<br>        <span class="hljs-keyword">break</span>  <span class="hljs-comment">#结束循环</span><br>    <span class="hljs-keyword">else</span>:<br>        a+=<span class="hljs-number">1</span>  <span class="hljs-comment">#改变变量，当每次执行else语句时，a+1次，当大于等于3时，则执行外部的else语句</span><br>              <span class="hljs-comment"># 同时打印输出。</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码错误&#x27;</span>)<br><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;三次已过，请重新运行&#x27;</span>)<br><br><br></code></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://s1.ax1x.com/2023/02/13/pSoNWz8.png"> </p><h1 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h1><p><img src="https://s1.ax1x.com/2023/02/13/pSotRu4.png" alt=" "></p><p><strong>要求：</strong> 输出一个三行四列的矩阵</p><p>外层控制打印行数，内层控制打印每一行的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;输出一个三行四列的矩阵&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">4</span>): <span class="hljs-comment">#行表，执行三次，一次一行，1到4代表打印3行，</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>): <span class="hljs-comment">#打印输出每一行的个数，1到5代表打印4个，</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>,end=<span class="hljs-string">&#x27;\t&#x27;</span>) <span class="hljs-comment">#不换行输出</span><br>    <span class="hljs-built_in">print</span>() <span class="hljs-comment">#打行</span><br></code></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://s1.ax1x.com/2023/02/13/pSoUpw9.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>三菱PLC-ST语言</title>
      <link href="/post/dc769c6c.html"/>
      <url>/post/dc769c6c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="markmap-container" style="height:300px">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;三菱PLC ST语言&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;标签&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;全局标签&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;局部标签&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;分支主题2&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;分支主题3&quot;}]}"></svg></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>西门子SCL常用控制语句解析</title>
      <link href="/post/c67c93fa.html"/>
      <url>/post/c67c93fa.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p><strong>SCL作为一种编程语言，可以实现LAD&#x2F;FBD所有的功能，大多数的指令与LAD&#x2F;FBD都是相同的，只是在编辑器中的外形不同。只有一些指令使用是不太一样的甚至LAD&#x2F;FBD没有的，这里只介绍这些不同的</strong>。</p><p>SCL特殊的指令有以下几种，如图1-3红框中的指令:</p><h2 id="图1-读-x2F-写存储器"><a href="#图1-读-x2F-写存储器" class="headerlink" title="图1 读&#x2F;写存储器"></a>图1 读&#x2F;写存储器</h2><p><img src="https://s1.ax1x.com/2023/01/16/pS1P2Uf.png"></p><h2 id="图2-转换操作中的变量"><a href="#图2-转换操作中的变量" class="headerlink" title="图2 转换操作中的变量"></a>图2 转换操作中的变量</h2><p><img src="https://s1.ax1x.com/2023/01/16/pS1PTrn.png"></p><h2 id="图3-程序控制指令"><a href="#图3-程序控制指令" class="headerlink" title="图3 程序控制指令             "></a>图3 程序控制指令             <img src="https://s1.ax1x.com/2023/01/16/pS1Pv24.png"></h2><p>这里只介绍图3的程序控制指令。</p><h2 id="程序控制指令解释"><a href="#程序控制指令解释" class="headerlink" title="程序控制指令解释"></a>程序控制指令解释</h2><table><thead><tr><th align="center">类型</th><th align="left">程序控制语句</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">选择语句</td><td align="left">IF-THEN语句</td><td align="center">用于将程序执行转移到两个备选分支之一 (取决于条件为 True 还是False)判断两个量的真假</td></tr><tr><td align="center">选择语句</td><td align="left">CASE语句</td><td align="center">用于选择执行 n 个备选分支之一 (取决于变量值，变量值等于2，设定的备选分支等于2的话，就会执行2这个分支。)</td></tr><tr><td align="center">选择语句</td><td align="left">FOR语句</td><td align="center">只要控制变量在指定值范围内，就重复执行某一语句序列</td></tr><tr><td align="center">循环语句</td><td align="left">WHILE-DO语句</td><td align="center">只要仍满足执行条件，就重复执行当前一语句序列，</td></tr><tr><td align="center">循环语句</td><td align="left">REPEAT-UNTIL语句</td><td align="center">重复执行某一语句序列，直到满足终止条件为止</td></tr><tr><td align="center">循环语句</td><td align="left">CONTINUE语句</td><td align="center">停止执行当前循环迭代</td></tr><tr><td align="center">程序跳转</td><td align="left">EXIT语句</td><td align="center">无论是否满足终止条件，都会随时退出循环</td></tr><tr><td align="center">程序跳转</td><td align="left">GOTO语句</td><td align="center">使程序立即跳转到指定标签</td></tr><tr><td align="center">程序跳转</td><td align="left">RETURN语句</td><td align="center">使程序立刻退出正在执行的块，返回到调用块</td></tr></tbody></table><p>程序控制指令是SCL编程的基础，接近高级语言的指令，虽然这些功能通过LAD&#x2F;FBD也可以实现，但使用SCL编写会更加方便，逻辑条理也更加清晰。</p><h3 id="IF-条件执行"><a href="#IF-条件执行" class="headerlink" title="IF    条件执行"></a>IF    条件执行</h3><p> 说明：使用“条件执行”指令，可以根据条件控制程序流的分支。该条件是结果为布尔值 (True或 False)的表达式。可以将Bool变量、逻辑表达式或比较表达式作为条件。<br> 执行该条件执行指令时，将对指定的表达式进行运算。如果表达式的值为 True，则表示满足该条件;如果其值为 False，则表示不满足该条件根据分支的类型，可以对以下形式的指令进行编程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c">IF...THEN... 分支:<br>IF <span class="hljs-string">&quot;条件&quot;</span> = <span class="hljs-number">1</span> THEN  <span class="hljs-comment">//输入条件，后面需要加上THEN，同时，注意格式，需要空格</span><br><span class="hljs-string">&quot;输出&quot;</span> := <span class="hljs-number">1</span>; <span class="hljs-comment">//注意空格，还有冒号以及分号的使用，必须在英文状态下输入。</span><br>END IF; <span class="hljs-comment">//结束语，也一定要加上。</span><br><span class="hljs-comment">//还有一种，我们可以在条件那再加上一个条件</span><br>IF <span class="hljs-string">&quot;条件&quot;</span> = <span class="hljs-number">1</span> THEN <span class="hljs-comment">//当条件等于1时，那么输出1就会动作，当条件不为1时，那么输出2就会动作。</span><br> <span class="hljs-string">&quot;输出1&quot;</span> := <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-comment">//相反</span><br> <span class="hljs-string">&quot;输出2&quot;</span> := <span class="hljs-number">1</span>;<br>END_IF;<br></code></pre></td></tr></table></figure><p><strong>在这里我建议，如果没有特别的要求，我们的变量表的名称可以化成英文或者是拼音的形式，这样我们在写起来的时候就可很大程度上避免来回切换中英文。</strong></p><h3 id="CASE：创建多路分支"><a href="#CASE：创建多路分支" class="headerlink" title="CASE：创建多路分支"></a>CASE：创建多路分支</h3><p>说明：使用”创建多路分支”指令，可以根据数字表达式的值执行多个指令序列中的一个。</p><p>按如下方式声明此指令：</p><p>CASE &lt;变量&gt; OF</p><p>&lt;常数1&gt;: &lt;语句1&gt;;</p><p>&lt;常数2&gt;: &lt;语句2&gt;;</p><p>……</p><p>&lt;常数n&gt;: &lt;语句n&gt;;</p><p>ELSE &lt;语句&gt;;</p><p>END_CASE;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">CASE <span class="hljs-string">&quot;状态值&quot;</span> OF   <span class="hljs-comment">//当状态值等于1时绿色就会TRUE，当等于2时，黄色就会TRUE。</span><br>                   <span class="hljs-comment">//当不等于1或2时红色就会TRUE,</span><br>    <span class="hljs-number">1</span>:  <span class="hljs-comment">// Statement section case 1</span><br>        <span class="hljs-string">&quot;绿色&quot;</span>:=<span class="hljs-number">1</span> ;<br>        <span class="hljs-string">&quot;黄色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">0</span>;<br>    <span class="hljs-number">2</span>:  <span class="hljs-comment">// Statement section case 2 to 4</span><br>        <span class="hljs-string">&quot;黄色&quot;</span>:=<span class="hljs-number">1</span>  ;<br>        <span class="hljs-string">&quot;绿色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">0</span>;<br>    ELSE  <span class="hljs-comment">// Statement section ELSE</span><br>        <span class="hljs-string">&quot;黄色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;绿色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">1</span>; ;<br>END_CASE;<br><span class="hljs-comment">//当表达式的值等于某个常数值时，将执行该常数后的各种指令。</span><br><span class="hljs-comment">//如果不满足条件，则执行 ELSE 后编写的指令。如果两个值不相等，则执行这些指令。</span><br></code></pre></td></tr></table></figure><h3 id="FOR：在计数循环中执行"><a href="#FOR：在计数循环中执行" class="headerlink" title="FOR：在计数循环中执行"></a>FOR：在计数循环中执行</h3><p>说明：使用”在计数循环中执行”指令，重复执行程序循环，直至运行变量不在指定的取值范围内。</p><p>也可以嵌套程序循环。在程序循环内，可以编写包含其它运行变量的其它程序循环。</p><p>通过指令”复查循环条件”(Continue)，可以终止当前正在运行的程序循环。通过指令”立即退出循环”(Exit)终止整个循环的执行。</p><p><img src="https://s1.ax1x.com/2023/02/03/pSs5QZd.png"></p><p><img src="https://s1.ax1x.com/2023/02/03/pSs58it.png"></p><p><strong>用FOR计算数组里面所有数据的和</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//计算数组里面所有数据的和</span><br><span class="hljs-string">&quot;和&quot;</span> := <span class="hljs-number">0</span>;<br>FOR <span class="hljs-string">&quot;计数&quot;</span> := <span class="hljs-number">0</span> TO <span class="hljs-number">20</span> DO<br>    <span class="hljs-string">&quot;和&quot;</span> := <span class="hljs-string">&quot;和&quot;</span> + <span class="hljs-string">&quot;数据块_1&quot;</span>.数组<span class="hljs-number">1</span>[<span class="hljs-string">&quot;计数&quot;</span>]; <br>    <span class="hljs-comment">// Statement section FOR</span><br> ;<br>END_FOR;<br></code></pre></td></tr></table></figure><p><strong>用FOR计算数组里面所有数据的最大值</strong></p><p>通过建立0-20的数组，使用FOR语句循环，在0到20 的数组中，用IF语句判断数组2中的最大值，最终在循环到第20的数组中时，IF判断出最大的值，循环停止，求最大值输出最后的结果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//计算数组数据中最大的值</span><br>FOR <span class="hljs-string">&quot;最大值&quot;</span> := <span class="hljs-number">0</span> TO <span class="hljs-number">20</span> DO <span class="hljs-comment">//最大值数据类型为：Int    地址：%MW16，</span><br><br>    <span class="hljs-comment">// Statement section FOR</span><br>    IF <span class="hljs-string">&quot;求最大值&quot;</span> &lt; <span class="hljs-string">&quot;数据块_1&quot;</span>.数组<span class="hljs-number">2</span>[<span class="hljs-string">&quot;最大值&quot;</span>] THEN  <span class="hljs-comment">//求最大值数据类型为:int,%MW18</span><br>        <span class="hljs-comment">// Statement section IF</span><br>        <span class="hljs-string">&quot;求最大值&quot;</span> := <span class="hljs-string">&quot;数据块_1&quot;</span>.数组<span class="hljs-number">2</span>[<span class="hljs-string">&quot;最大值&quot;</span>]; <span class="hljs-comment">//数据类型：Array[0..20] of Int，</span><br>      END_IF;   <br><br>END_FOR;<br></code></pre></td></tr></table></figure><h3 id="WHILE语句"><a href="#WHILE语句" class="headerlink" title="WHILE语句"></a>WHILE语句</h3><p>在满足条件时，要执行的语句。如果不满足条件，则程序将从 END_WHILE 后继续执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">WHILE <span class="hljs-string">&quot;参数1&quot;</span> &lt;= <span class="hljs-number">100</span> AND <span class="hljs-string">&quot;标志位&quot;</span> = <span class="hljs-number">0</span> DO <span class="hljs-comment">//当参数1小于100时，并且标志位等于0</span><br>                                          <span class="hljs-comment">//WHILE语句开始循环</span><br>    <span class="hljs-comment">// Statement section WHILE</span><br>    <span class="hljs-string">&quot;参数2&quot;</span> := <span class="hljs-string">&quot;参数1&quot;</span> + <span class="hljs-string">&quot;参数2&quot;</span>;     <span class="hljs-comment">//参数2=参数1+参数2，:=表示传送，将后面的结果传入。</span><br>    <span class="hljs-string">&quot;参数1&quot;</span>:= <span class="hljs-string">&quot;参数1&quot;</span> + <span class="hljs-number">1</span>;             <span class="hljs-comment">//参数1=参数1+1，</span><br><br>    EXIT; <span class="hljs-comment">//表示立即退出循环，如果没有EXIT，那么就会一直在循环中，无法跳出。                           </span><br>END_WHILE;<br>IF <span class="hljs-string">&quot;参数1&quot;</span> &gt;= <span class="hljs-number">101</span> THEN <span class="hljs-comment">//当参数1大于等于101时，结束循环，</span><br>    <span class="hljs-comment">// Statement section IF</span><br>    <span class="hljs-string">&quot;标志位&quot;</span> := <span class="hljs-number">1</span>;<br>END_IF;<br></code></pre></td></tr></table></figure><h3 id="REPEAT语句"><a href="#REPEAT语句" class="headerlink" title="REPEAT语句"></a>REPEAT语句</h3><p>REPEAT语句先执行循环体，再判断条件是否成立，</p><p><img src="https://s1.ax1x.com/2023/02/04/pSyJJ4P.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">#<span class="hljs-string">&quot;3&quot;</span> := <span class="hljs-number">0</span>;<br>REPEAT<br>    #<span class="hljs-string">&quot;3&quot;</span> := #<span class="hljs-string">&quot;3&quot;</span>+<span class="hljs-number">2</span>;<br>UNTIL #<span class="hljs-string">&quot;3&quot;</span>&gt;<span class="hljs-number">100</span> END_REPEAT;<span class="hljs-comment">//当执行循环体后，判断条件时候成立若不成立，继续循环，</span><br>                       <span class="hljs-comment">//当条件true时，结束循环。</span><br>#<span class="hljs-string">&quot;3&quot;</span> := #<span class="hljs-string">&quot;4&quot;</span>;    <br></code></pre></td></tr></table></figure><ol><li><p>FOR语句循环实现有限次循环</p></li><li><p>WHLIE语句的条件为真时执行循环体</p></li><li><p>REPEAT语句的条件为否时执行循环体</p><h3 id="GOTO：跳转"><a href="#GOTO：跳转" class="headerlink" title="GOTO：跳转"></a>GOTO：跳转</h3><p>说明：使用”跳转”指令，可以从标注为跳转标签的指定点开始继续执行程序。</p><p>跳转标签和”跳转”指令必须在同一个块中。在一个块中，跳转标签的名称只能指定一次。每个跳转标签可以是多个跳转指令的目标。不允许从”外部”跳转到程序循环内，但允许从循环内跳转到”外部”。</p><p>注意：<u>LAD&#x2F;FBD语言内的SCL段，不能使用GOTO指令。</u></p><p>跳转标签遵循以下语法规则：</p><ul><li>字母（a 至 z，A 至 Z）</li><li>字母和数字组合；请必须字母为开始</li></ul><p>可按如下方式声明此指令：</p><p>GOTO &lt;跳转标签&gt;;</p><p>…</p><p>&lt;跳转标签&gt;: &lt;语句&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c">CASE <span class="hljs-string">&quot;状态值&quot;</span> OF  <span class="hljs-comment">//当状态值为1.2.3中的某个数时，</span><br>                 <span class="hljs-comment">//相应跳转至MyLABEL1，MyLABEL2，MyLABEL3，相反则跳转至MyLABEL4。</span><br>    <span class="hljs-number">1</span>:<br>        GOTO MyLABEL1 ;  <span class="hljs-comment">// Statement section case 1</span><br><br>    <span class="hljs-number">2</span>:<br>        GOTO MyLABEL2<span class="hljs-comment">// Statement section case 2 to 4</span><br>        ;<br>    <span class="hljs-number">3</span>:<br>        GOTO MyLABEL3;<br>    ELSE  <span class="hljs-comment">// Statement section ELSE</span><br>        GOTO MyLABEL4; ;<br>END_CASE;<br>MyLABEL1:<br><span class="hljs-string">&quot;参数1&quot;</span> += <span class="hljs-number">1</span>;<br>MyLABEL2:<br><span class="hljs-string">&quot;参数2&quot;</span> += <span class="hljs-number">2</span>;<br>MyLABEL3:<br><span class="hljs-string">&quot;参数3&quot;</span> += <span class="hljs-number">3</span>;<br>MyLABEL4:<br><span class="hljs-string">&quot;参数4&quot;</span> += <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">### RETURN：退出块<br><br>说明：使用&quot;退出块&quot;指令，可以终止当前处理块中的程序执行，并在调用块中继续执行。<br><br>如果该指令出现在块结尾处，则可以跳过。<br><br>```c<br>IF &quot;参数3&quot;&gt;=5000 THEN<br> // Statement section IF<br> RETURN ;<br>END_IF;<br></code></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>以上就是西门子SCL语句的程序控制指令，需要灵活多变使用，注意语法格式。</p><div class="markmap-container" style="height:300px">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;p&quot;:{}}"></svg></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>西门子SCL语句（二）</title>
      <link href="/post/65434e6a.html"/>
      <url>/post/65434e6a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="CASE-OF语句练习"><a href="#CASE-OF语句练习" class="headerlink" title="CASE OF语句练习"></a>CASE OF语句练习</h1><p><code>CASE       OF语句，</code>用于选择执行 n 个备选分支之一 (取决于变量值)</p><p>我们提前建好变量，建立一个存储区，<code>%MW10</code>命名为状态值，数据类型为int</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-type">CASE</span> <span class="hljs-string">&quot;状态值&quot;</span> <span class="hljs-type">OF</span><br>    <span class="hljs-number">1</span>:  <span class="hljs-comment">// Statement section case 1</span><br>        <span class="hljs-string">&quot;绿色&quot;</span>:=<span class="hljs-number">1</span> ;<br>        <span class="hljs-string">&quot;黄色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">0</span>;<br>    <span class="hljs-number">2</span>:  <span class="hljs-comment">// Statement section case 2 to 4</span><br>        <span class="hljs-string">&quot;黄色&quot;</span>:=<span class="hljs-number">1</span>  ;<br>        <span class="hljs-string">&quot;绿色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">0</span>;<br>    <span class="hljs-type">ELSE</span>  <span class="hljs-comment">// Statement section ELSE</span><br>        <span class="hljs-string">&quot;黄色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;绿色&quot;</span> := <span class="hljs-number">0</span>;<br>        <span class="hljs-string">&quot;红色&quot;</span> := <span class="hljs-number">1</span>; ;<br><span class="hljs-type">END_CASE</span>;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>西门子SCL语言配置</title>
      <link href="/post/16503b92.html"/>
      <url>/post/16503b92.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="西门子SCL语句"><a href="#西门子SCL语句" class="headerlink" title="西门子SCL语句"></a>西门子SCL语句</h1><h2 id="打开博图，添加新设备，这里我们以西门子1500PLC为例，"><a href="#打开博图，添加新设备，这里我们以西门子1500PLC为例，" class="headerlink" title="打开博图，添加新设备，这里我们以西门子1500PLC为例，"></a>打开博图，添加新设备，这里我们以西门子1500PLC为例，</h2><img title="" src="https://s1.ax1x.com/2023/01/16/pSly974.png" alt="" width="623"><h2 id="创建好我们需要plc的型号后，进入组态，点击设备组态，"><a href="#创建好我们需要plc的型号后，进入组态，点击设备组态，" class="headerlink" title="创建好我们需要plc的型号后，进入组态，点击设备组态，"></a>创建好我们需要plc的型号后，进入组态，点击设备组态，</h2><p><img src="https://s1.ax1x.com/2023/01/16/pSlyFhR.png" alt="去"></p><h2 id="双击PLC-I-x2F-O面板个其中一个，进入配置页面，将起始地址改为126，结束地址改为135，这里就是模拟量的地址改变。"><a href="#双击PLC-I-x2F-O面板个其中一个，进入配置页面，将起始地址改为126，结束地址改为135，这里就是模拟量的地址改变。" class="headerlink" title="双击PLC I&#x2F;O面板个其中一个，进入配置页面，将起始地址改为126，结束地址改为135，这里就是模拟量的地址改变。"></a>双击PLC I&#x2F;O面板个其中一个，进入配置页面，将起始地址改为126，结束地址改为135，这里就是模拟量的地址改变。</h2><p><img src="https://s1.ax1x.com/2023/01/16/pSly39I.png"></p><h2 id="再双击点开另一个面板，将这里的起始地址改为0，结束地址为1，这里更改就是为了将plc的实际输出地址改为0起，这样方便我们对应PLC的实际地址。"><a href="#再双击点开另一个面板，将这里的起始地址改为0，结束地址为1，这里更改就是为了将plc的实际输出地址改为0起，这样方便我们对应PLC的实际地址。" class="headerlink" title="再双击点开另一个面板，将这里的起始地址改为0，结束地址为1，这里更改就是为了将plc的实际输出地址改为0起，这样方便我们对应PLC的实际地址。"></a>再双击点开另一个面板，将这里的起始地址改为0，结束地址为1，这里更改就是为了将plc的实际输出地址改为0起，这样方便我们对应PLC的实际地址。</h2><p><img src="https://s1.ax1x.com/2023/01/16/pSlysg0.png"></p><p><strong>简单的组态后，就可以开始我们的SCL语句的学习，SCL语句，在处理运算时有着很好的能力，可以很方便的让我们进行运算。</strong></p><h2 id="创建PLC变量表"><a href="#创建PLC变量表" class="headerlink" title="创建PLC变量表"></a>创建PLC变量表</h2><p>在我们写plc程序的过程中，我们需要养成一个好习惯，如果变量很多，需要用到的IO点很多那我们就必须要提前在plc变量表中建立好变量，这样我们在调用时就不会出现忘记或者变量不清晰的问题。变量表也能帮助我们理清思路。所以提前创建好plc变量表还是很有必要的。</p><p><img src="https://s1.ax1x.com/2023/01/16/pSly5CR.png"></p><h2 id="创建SCL语句块"><a href="#创建SCL语句块" class="headerlink" title="创建SCL语句块"></a>创建SCL语句块</h2><p>然后我们就可以点开<code>Main主程序</code>，我们也可以添加新的一个<code>FC块</code>，或者<code>FB块</code>都可以，当然了也可以选择不单另创建，我们也可以在主程序中创建。</p><p><img src="https://s1.ax1x.com/2023/01/16/pS1StfJ.png"></p><p><strong>右击程序段，在弹出的页面下方选择插入SCL程序段。这样直接就会生成一个程序块。</strong></p><p><img src="https://s1.ax1x.com/2023/01/16/pS1SHhQ.png">    </p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>三菱plc总结（一）</title>
      <link href="/post/a659eac3.html"/>
      <url>/post/a659eac3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>   不知不觉间，职业道路的求学生涯已经要六年了，这六年来学到了很多，也长大了很多，接触到了电工，机械，自动化，单片机，plc等学科，也是在自己的努力下进入了技能大赛，接触并学习到很多曾经接触不到的知识。同时接触很多人，开阔了自己的眼界，从刚开始的兴趣转变为真正的热爱，并且为之努力，加深技能的磨炼，让自己沉浸其中，让自己每天都过的充实。</p><p>我觉得在职业道路中，只有一直对自己的专业保持热爱，才可以无限成长，并且发展成为自己的一部分，转化为自身的实力。</p></blockquote><p><img src="https://s1.ax1x.com/2023/01/14/pSM6IZ4.jpg"></p><hr><h1 id="PLC"><a href="#PLC" class="headerlink" title="PLC"></a>PLC</h1><h2 id="三菱FX-系列plc"><a href="#三菱FX-系列plc" class="headerlink" title="三菱FX-系列plc"></a>三菱FX-系列plc</h2><p>____这是我第一次接触的plc，也是非常好入门的一个，在我的老师带领下，我们很快就掌握了它的基础使用，虽然很基础。刚开始用的是三菱的手持编程器(<del>虽然已经忘记了很多</del>😂)，因为在之后训练大赛的过程中使用电脑进行的，所以在手持编程器上，也就没有再进行下去，但是在做过很多套题之后，我的水平也是日益增长，直到今日我也没有放弃自己对它的探索。 </p><p>____有很多人可能把plc想的很难，因为需要编程，但其实，在现实中，这个可编程控制器plc是一点也不难学的，只要肯学，肯动脑筋，就一定可以学会。</p><h2 id="plc基础的认识"><a href="#plc基础的认识" class="headerlink" title="plc基础的认识"></a>plc基础的认识</h2><ol><li><p>plc全称是“可编程控制器”英文名（Programmable Logic Controller）简称PC或PLC是一种数字运算操作的电子系统，是专门在工业环境下应用而设计。</p></li><li><p>它采用可以编制程序的<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E5%99%A8/1583185?fromModule=lemma_inlink">存储器</a>，用来在执行存储<code>逻辑运算</code>和<code>顺序控制</code>、<code>定时</code>、<code>计数</code>和<code>算术运算</code>等操作的指令，并通过<code>数字</code>或<code>模拟</code>的<code>输入(I)</code>和<code>输出(O)</code><a href="https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3/2886384?fromModule=lemma_inlink">接口</a>，控制各种类型的机械设备或生产过程。可编程控制器是在电器控制技术和<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/1127562?fromModule=lemma_inlink">计算机技术</a>的基础上开发出来的，并逐渐发展成为以微处理器为核心，把自动化技术、计算机技术、通讯技术融为一体的新型工业控制装置。</p></li><li><p>PLC已被广泛应用于各种生产机械和生产过程的自动控制中，成为一种最重要、最普及、应用场合最多的工业控制装置，被公认为现代工业自动化的三大支柱（PLC、机器人、CAD&#x2F;CAM）之一”</p><p>想要更全面的了解plc 的工作原理可自行搜索，这里我们就不讲了。</p></li></ol><h2 id="plc软件的介绍与安装教程"><a href="#plc软件的介绍与安装教程" class="headerlink" title="plc软件的介绍与安装教程"></a>plc软件的介绍与安装教程</h2><ol><li><p>在三菱plc中它所有的编程软件主要有三款，GX Developer，GX Works2和GX Works3</p></li><li><p><code>GX Developer</code>是老版软件了不带仿真，如果需要仿真，还要安装仿真软件GXSimulator，GX Simulator6-C不支持三菱fx 3u仿真，但它是中文版，GX Simulator7则支持fx 3u，但它是英文版的。</p></li><li><p>GX Developer安装步骤</p><p>GX Developer安装需要先安装环境文件，EnvMEL里的STEP.exe，安装好后再安装外部文件的STEP.exe</p><p>GX Developer安装好后，</p><p>安装GX Simulator，</p><p>同样是点击STEP.exe安装</p><p>GX Works2则是新版软件，自带仿真，安装完即可以使用。</p><p><a href="https://zhuanlan.zhihu.com/p/541276015">GX Works2安装教程</a> &lt;点击即可看到</p><p><a href="https://www.bilibili.com/video/BV1Hv411M7Pr/?from=search&seid=16748953512924650955&spm_id_from=333.337.0.0&vd_source=d18725c1557a88019cba6b3099c041da">GX works3安装教程</a> &lt;点击即可看到</p><p>GX Works3是最新版的三菱编程软件，但此款软件用的比较少，主要是为了fx 5u系列和R系列。</p></li><li><p>安装软件时需要填写序列号：570-986818410  </p><pre><code>                                                 804-999559933                                                   998-598638072                                                   952—500209687</code></pre><p>一般来说如果有现成的三菱plc学，有三菱Developer这个软件就可以了，如果没有三菱plc实体的话，那么GX work2，GX work3，就可以用，当然了现在也有模拟仿真软件可以用，就像Factory IO这个软件，也是支持三菱plc的连接，只是在连接的过程中稍微要比西门子博图软件要更繁琐。</p><p><img src="https://s1.ax1x.com/2023/01/14/pSMWHvq.png"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎大家留下宝贵意见</title>
      <link href="/post/29c39da7.html"/>
      <url>/post/29c39da7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="欢迎大家留下宝贵意见"><a href="#欢迎大家留下宝贵意见" class="headerlink" title="欢迎大家留下宝贵意见"></a>欢迎大家留下宝贵意见</h1><p><img src="https://pic4.zhimg.com/80/v2-4d7611670a65be4e03fc86798d082833_720w.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python笔记</title>
      <link href="/post/c00b24b1.html"/>
      <url>/post/c00b24b1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="打印字符"><a href="#打印字符" class="headerlink" title="打印字符"></a>打印字符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;nihao&#x27;</span>) <br>运算使用 <span class="hljs-built_in">print</span>(<span class="hljs-number">198776543</span> + <span class="hljs-number">2999999</span>)将数据输出到文件中 注意！<br><br><span class="hljs-number">1.</span>所指定的盘符必须存在， <br><br><span class="hljs-number">2.</span>使用file= fpfp = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;D:/text.txt&#x27;</span>, <span class="hljs-string">&#x27;a+&#x27;</span>)如果文件不存在，就创建，如果有，就在文件里面继续追加 <br><br><span class="hljs-number">3.</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;nihao&#x27;</span>, file=fp)fp表示输入到上面一行的地址中 没有file，打印的内容就无法在新建的文本中显<br>close()关闭 <br></code></pre></td></tr></table></figure><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello\nnihao&#x27;</span>)<span class="hljs-comment">#\  +转义字符的首字母   n--&gt;newline的首字母表示换行  </span><br><br> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello\tnihao&#x27;</span>)<span class="hljs-comment">#\  +转义字符的首字母   t--&gt;的首字母表示空出4个字符位 </span><br><br> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello\rnihao&#x27;</span>)<span class="hljs-comment">#\  +转义字符的首字母   r--&gt;的首字母表示执行将前一个字符覆盖的字符 </span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello\bnihao&#x27;</span>)<span class="hljs-comment">#\  +转义字符的首字母   b--&gt;的首字母表示退一格 </span><br><br> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;http:\\\\www.baidu.com&#x27;</span>) <br></code></pre></td></tr></table></figure><hr><h1 id="python中的保留字和标识符"><a href="#python中的保留字和标识符" class="headerlink" title="python中的保留字和标识符"></a>python中的保留字和标识符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"> <span class="hljs-keyword">import</span> keyword <br><br> <span class="hljs-built_in">print</span>( keyword.kwlist)<span class="hljs-comment">#[&#x27;False&#x27;, &#x27;None&#x27;, </span><br><span class="hljs-string">&#x27;True&#x27;</span>, <span class="hljs-string">&#x27;and&#x27;</span>, <span class="hljs-string">&#x27;as&#x27;</span>, <span class="hljs-string">&#x27;assert&#x27;</span>, <span class="hljs-string">&#x27;break&#x27;</span>,<span class="hljs-comment"># &#x27;class&#x27;, &#x27;continue&#x27;, &#x27;def&#x27;, &#x27;del&#x27;, &#x27;elif&#x27;,</span><br> <span class="hljs-string">&#x27;else&#x27;</span>, <span class="hljs-string">&#x27;except&#x27;</span>, <span class="hljs-string">&#x27;finally&#x27;</span>, <span class="hljs-string">&#x27;for&#x27;</span>,<span class="hljs-comment">#&#x27;from&#x27;, &#x27;global&#x27;, &#x27;if&#x27;, &#x27;import&#x27;, &#x27;in&#x27;, &#x27;is&#x27;, </span><br> <span class="hljs-string">&#x27;lambda&#x27;</span>, <span class="hljs-string">&#x27;nonlocal&#x27;</span>, <span class="hljs-string">&#x27;not&#x27;</span>, <span class="hljs-string">&#x27;or&#x27;</span>,<span class="hljs-comment">#&#x27;pass&#x27;, </span><br> <span class="hljs-string">&#x27;raise&#x27;</span>, <span class="hljs-string">&#x27;return&#x27;</span>, <span class="hljs-string">&#x27;try&#x27;</span>, <span class="hljs-string">&#x27;while&#x27;</span>, <span class="hljs-string">&#x27;with&#x27;</span>, <br> <span class="hljs-string">&#x27;yield&#x27;</span>]保留字在程序中不可用 <br></code></pre></td></tr></table></figure><hr><h1 id="二进制与字符编码"><a href="#二进制与字符编码" class="headerlink" title="二进制与字符编码"></a>二进制与字符编码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">0b100111001011000</span>)) <br><br> <span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;乘&#x27;</span>)) <br></code></pre></td></tr></table></figure><hr><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">name=<span class="hljs-string">&#x27;天空北慕&#x27;</span> <br><br><span class="hljs-built_in">print</span>(name) <br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;标识&#x27;</span>,<span class="hljs-built_in">id</span>(name)) <br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;类型&#x27;</span>,<span class="hljs-built_in">type</span>(name)) <br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;值&#x27;</span>,name) <br></code></pre></td></tr></table></figure><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 天空北慕·</span><br><span class="hljs-comment"># 开发时间：2022/11/20 21:45</span><br><span class="hljs-comment">#整数</span><br>n1=<span class="hljs-number">90</span><br>n2=-<span class="hljs-number">77</span><br>n3=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(n1,<span class="hljs-built_in">type</span>(n1))<br><span class="hljs-built_in">print</span>(n2,<span class="hljs-built_in">type</span>(n2))<br><span class="hljs-built_in">print</span>(n3,<span class="hljs-built_in">type</span>(n3))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;十进制&#x27;</span>,<span class="hljs-number">118</span>)<br><br><span class="hljs-comment">#  浮点数</span><br>a=<span class="hljs-number">3.1415926</span><br><span class="hljs-built_in">print</span>(a,<span class="hljs-built_in">type</span>(a))<br>n5=<span class="hljs-number">1.1</span><br>n22=<span class="hljs-number">2.2</span><br><span class="hljs-built_in">print</span>(n5+n22)<br><span class="hljs-keyword">from</span> decimal <span class="hljs-keyword">import</span>  Decimal<br><span class="hljs-built_in">print</span>(Decimal(<span class="hljs-string">&#x27;1.1&#x27;</span>)+Decimal(<span class="hljs-string">&#x27;2.2&#x27;</span>))<br><span class="hljs-comment">#布尔数据类型</span><br><span class="hljs-comment">#用来表示真或者假的值，布尔值在python中可以转成整数</span><br>f1=<span class="hljs-literal">True</span><br>f2=<span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(f1,<span class="hljs-built_in">type</span>(f1))<br><span class="hljs-built_in">print</span>(f2,<span class="hljs-built_in">type</span>(f2))<br><span class="hljs-comment">#布尔值可以转成整数计算</span><br><span class="hljs-built_in">print</span>(f1+<span class="hljs-number">1</span>)  <span class="hljs-comment">#1+1=2</span><br><span class="hljs-built_in">print</span>((f2+<span class="hljs-number">1</span>))  <span class="hljs-comment">#0+1=1</span><br><span class="hljs-comment">#字符串类型</span><br><span class="hljs-comment">#字符串又被称为不可变的字符序列</span><br><span class="hljs-comment">#可以使用单&#x27;双&#x27;&#x27;引号&quot;&quot;三引号&#x27;&#x27;&#x27; &#x27;&#x27;&#x27;来定义</span><br><span class="hljs-comment">#单引号和双引号的定义字符串必须在一行</span><br><span class="hljs-comment">#三引号的字符串可以分布在连续的多行</span><br>q1=<span class="hljs-string">&#x27;认识你很幸运&#x27;</span><br>q2=<span class="hljs-string">&quot;认识你很幸运&quot;</span><br>q3=<span class="hljs-string">&quot;&quot;&quot;认识你很幸运&quot;&quot;&quot;</span><br>q4=<span class="hljs-string">&quot;&quot;&quot;认识你很幸运</span><br><span class="hljs-string">见到你也是&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(q1)<br><span class="hljs-built_in">print</span>(q2)<br><span class="hljs-built_in">print</span>(q3)<br><span class="hljs-built_in">print</span>(q4)<br><span class="hljs-built_in">print</span>(q1)<br><span class="hljs-built_in">print</span>(q2)<br><span class="hljs-built_in">print</span>(q3)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(q1),<span class="hljs-built_in">type</span>(q2),<span class="hljs-built_in">type</span>(q3),<span class="hljs-built_in">type</span>(q4))<br><span class="hljs-comment">#数据类型转换</span><br>wo=<span class="hljs-string">&#x27;张三&#x27;</span><br>nianling=<span class="hljs-number">30</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(wo),<span class="hljs-built_in">type</span>(nianling))<span class="hljs-comment">#数据类型不同，</span><br><span class="hljs-comment">#print(&#x27;我叫&#x27;+wo+&#x27;今年，&#x27;+strnianling+&#x27;岁了&#x27;)#此时是报错的</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我叫&#x27;</span>+wo+<span class="hljs-string">&#x27;今年，&#x27;</span>+<span class="hljs-built_in">str</span>(nianling)+<span class="hljs-string">&#x27;岁了&#x27;</span>)<span class="hljs-comment">#解决方案，将int类型通过str()函数int类型转换成为ser类型的</span><br>w1=<span class="hljs-number">10</span><br>w2=<span class="hljs-number">10.2</span><br>w3=<span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(w1),<span class="hljs-built_in">type</span>(w2),<span class="hljs-built_in">type</span>(w3))<span class="hljs-comment">#&lt;class &#x27;int&#x27;&gt; &lt;class &#x27;float&#x27;&gt; &lt;class &#x27;bool&#x27;&gt;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(w1),<span class="hljs-built_in">str</span>(w2),<span class="hljs-built_in">str</span>(w3),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w1)),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w2)),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w3)))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;w1&#x27;</span>,<span class="hljs-string">&#x27;w2&#x27;</span>,<span class="hljs-string">&#x27;w3&#x27;</span>,<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w1)),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w2)),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(w3)))<span class="hljs-comment">#可以用引号转，</span><br><span class="hljs-comment">#10 10.2 False &lt;class &#x27;str&#x27;&gt; &lt;class &#x27;str&#x27;&gt; &lt;class &#x27;str&#x27;&gt;这个时候str函数就将 int值，float浮点值，bool布尔值</span><br><span class="hljs-comment"># 转换成str字符串值</span><br><span class="hljs-comment">#str()函数将其他数据类型转换成字符串，也可以用引号转换，用引号转简单</span><br><span class="hljs-comment">#int()函数将其他数据类型转换成整数，但是文字类和小数类字符串是无法转换成为整数的</span><br><span class="hljs-comment">#float()函数将其他数据类型转换成为浮点数，文字类无法转换成整数，整数转浮点数，末尾为.0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;w3&#x27;</span>,<span class="hljs-built_in">type</span>(<span class="hljs-built_in">int</span>(w3)))<span class="hljs-comment">#也是可以用引号转换</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">float</span>(w1),<span class="hljs-built_in">type</span>(<span class="hljs-built_in">float</span>(w1)))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;w1&#x27;</span>,<span class="hljs-built_in">type</span>(<span class="hljs-built_in">float</span>(w1)))<span class="hljs-comment">#都可以用引号进行转换</span><br></code></pre></td></tr></table></figure><hr><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 天空北慕·</span><br><span class="hljs-comment"># 开发时间：2022/11/21 23:05</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你好&#x27;</span>)<br><span class="hljs-string">&#x27;&#x27;&#x27;嘿嘿，</span><br><span class="hljs-string">多行注释&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><hr><h1 id="输入函数input"><a href="#输入函数input" class="headerlink" title="输入函数input()"></a>输入函数input()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 天空北慕·</span><br><span class="hljs-comment"># 开发时间：2022/11/21 23:17</span><br><span class="hljs-comment">#wo=input(&#x27;你想要什么礼物&#x27;)</span><br><span class="hljs-comment">#print(wo,type(&#x27;wo&#x27;))</span><br><span class="hljs-comment">#从键盘录入两个整数，计算两个数的和</span><br>a=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入一个加数:&#x27;</span>))<span class="hljs-comment">#可以在这直接进行转换，将输入的值转为int值</span><br><span class="hljs-comment">#a=int(a)#  将转换后得值存入a中</span><br>b=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入另一个整数:&#x27;</span>))<br><span class="hljs-comment">#b=int(b)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a),<span class="hljs-built_in">type</span>(b))<br><span class="hljs-built_in">print</span>(a+b)<br></code></pre></td></tr></table></figure><hr><h1 id="算术运算符中的标准运算符"><a href="#算术运算符中的标准运算符" class="headerlink" title="算术运算符中的标准运算符"></a>算术运算符中的标准运算符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 天空北慕·</span><br><span class="hljs-comment"># 开发时间：2022/11/21 23:43</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>+<span class="hljs-number">1</span>)<span class="hljs-comment">#加法运算</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>-<span class="hljs-number">1</span>)<span class="hljs-comment">#减法运算</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>/<span class="hljs-number">1</span>)<span class="hljs-comment">#除法运算</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>*<span class="hljs-number">1000</span>)<span class="hljs-comment">#乘法运算</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">11</span>//<span class="hljs-number">2</span>) <span class="hljs-comment">#整除运算  只取整数，不取小数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">11</span>%<span class="hljs-number">2</span>)<span class="hljs-comment">#取余计算</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">2</span>**<span class="hljs-number">3</span>)<span class="hljs-comment">#表示的是2的3次方</span><br></code></pre></td></tr></table></figure><hr><h1 id="标准运算中一正一负，向下取整"><a href="#标准运算中一正一负，向下取整" class="headerlink" title="标准运算中一正一负，向下取整"></a>标准运算中一正一负，向下取整</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 天空北慕·</span><br><span class="hljs-comment"># 开发时间：2022/11/21 23:51</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">9</span>//<span class="hljs-number">4</span>)<span class="hljs-comment">#2</span><br><span class="hljs-built_in">print</span>(-<span class="hljs-number">9</span>//-<span class="hljs-number">4</span>)<span class="hljs-comment">#2</span><br><span class="hljs-built_in">print</span>(-<span class="hljs-number">9</span>//<span class="hljs-number">4</span>)<span class="hljs-comment">#-3一正一负的整数公式，向下取整</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">9</span>//-<span class="hljs-number">4</span>)<span class="hljs-comment">#-3</span><br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-number">9</span>%-<span class="hljs-number">4</span>)<span class="hljs-comment">#-3  公式   余数=被除数-除数*商   9-（-4）*（-3）9-12--&gt;  -3</span><br><span class="hljs-built_in">print</span>(-<span class="hljs-number">9</span>%<span class="hljs-number">4</span>)<span class="hljs-comment">#3                             -9-4*(-3)  -9+12--&gt;   3</span><br></code></pre></td></tr></table></figure><hr><h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#赋值运算符，计算顺序是从右到左</span><br>a=<span class="hljs-number">3</span>+<span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;--链式赋值---&#x27;</span>)<br>b=c=d=<span class="hljs-number">100</span><br><span class="hljs-built_in">print</span>(b,<span class="hljs-built_in">id</span>(b))<br><span class="hljs-built_in">print</span>(c,<span class="hljs-built_in">id</span>(c))<br><span class="hljs-built_in">print</span>(d,<span class="hljs-built_in">id</span>(d))<br><br><span class="hljs-built_in">print</span>((<span class="hljs-string">&#x27;---支持参数赋值---&#x27;</span>))<br>a=<span class="hljs-number">20</span><br>a+=<span class="hljs-number">50</span><br><span class="hljs-built_in">print</span>(a)<br>a-=<span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(a)<br>a*=<span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(a)<br>a/=<span class="hljs-number">30</span><br><span class="hljs-built_in">print</span>(a)<br>a//=<span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(a)<br>a%=<span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;----支持系列解包赋值---&#x27;</span>)<br>c,v,b=<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span><br><span class="hljs-built_in">print</span>(c,v,b)<br><span class="hljs-comment">#左右变量的个数和值得个数要对应，要不然就会报错</span><br>z,x=<span class="hljs-number">10</span>,<span class="hljs-number">21</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;---交换两个变量的值--&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;交换之前:&#x27;</span>,z,x)<br><span class="hljs-comment">#交换</span><br>z,x=x,z,<br><span class="hljs-built_in">print</span>(z,x)<br></code></pre></td></tr></table></figure><hr><h1 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#比较运算符   比较运算符的结果为BOOL类型</span><br>a,b=<span class="hljs-number">10</span>,<span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a&gt;b吗&#x27;</span>,a&gt;b)<span class="hljs-comment">#false</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a&lt;b吗&#x27;</span>,a&lt;b)  <span class="hljs-comment">#是</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a&lt;=b吗&#x27;</span>,a&lt;=b)<span class="hljs-comment">#是</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a&gt;=b吗&#x27;</span>,a&gt;=b)<span class="hljs-comment">#不是</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a==b吗&#x27;</span>,a==b)<span class="hljs-comment">#a等于b吗   no</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a!=b吗&#x27;</span>,a!=b)<span class="hljs-comment">#a不等于b吗   yes</span><br><span class="hljs-comment">#一个&#x27;=&#x27;是赋值运算符，==两个是比较运算符</span><br><span class="hljs-comment">#一个变量由三部分组成，标识，类型，值</span><br><span class="hljs-comment">#==比较的是值</span><br><span class="hljs-comment">#比较对象的标识，是is</span><br>a=<span class="hljs-number">10</span><br>b=<span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(a==b)<span class="hljs-comment">#a和b的值相等</span><br><span class="hljs-built_in">print</span>(a <span class="hljs-keyword">is</span> b)<span class="hljs-comment">#a和b的标识相等</span><br>qq1=[<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>]<br>ww2=[<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>]<br><span class="hljs-built_in">print</span>(qq1==ww2)<br><span class="hljs-built_in">print</span>(qq1 <span class="hljs-keyword">is</span> ww2)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(qq1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(ww2))<br><span class="hljs-built_in">print</span>(qq1 <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> ww2)<br><span class="hljs-built_in">print</span>(a <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> b)<br></code></pre></td></tr></table></figure><hr><h1 id="内置函数range"><a href="#内置函数range" class="headerlink" title="内置函数range()"></a>内置函数range()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#内置函数range()三种创建方式</span><br><span class="hljs-string">&#x27;&#x27;&#x27;第一种，只有一个参数(小括号中只有一个数)&#x27;&#x27;&#x27;</span><br>q=<span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>)<span class="hljs-comment">#[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],默认从零开始，默认相差1，称为步长</span><br><span class="hljs-built_in">print</span>(q)<span class="hljs-comment">#(0,20)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(q))<span class="hljs-comment">#用于查看range中的整数序列    ---&gt;list是列表的意思</span><br><span class="hljs-string">&#x27;&#x27;&#x27;第二种创建方式，给两个参数，(小括号中给两个数)&#x27;&#x27;&#x27;</span><br>w=<span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">10</span>)<span class="hljs-comment">#[2, 3, 4, 5, 6, 7, 8, 9],指定了起始值，从2到10（不包含10），默认步长为1</span><br><span class="hljs-built_in">print</span>(w)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(w)<br><span class="hljs-string">&#x27;&#x27;&#x27;第三种创建方式，给三个参数，(小括号中给三个数)&#x27;&#x27;&#x27;</span><br>a=<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>,<span class="hljs-number">2</span>)<span class="hljs-comment">#[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]</span><br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(a))    <br><span class="hljs-string">&#x27;&#x27;&#x27;判断指定的整数 在序列中是否存在 in  not in&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> <span class="hljs-keyword">in</span> a)<span class="hljs-comment">#10不在当前的序列中</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">9</span> <span class="hljs-keyword">in</span> a)<span class="hljs-comment">#9，在当前的序列中    </span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> a)  <span class="hljs-comment">#10的确不在当前序列中  对</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">9</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> a)   <span class="hljs-comment">#判断错</span><br>s=<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">101</span>,<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(s))<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><hr><h1 id="循环结构while"><a href="#循环结构while" class="headerlink" title="循环结构while()"></a>循环结构while()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#a=1</span><br><span class="hljs-comment">#判断条件表达式</span><br><span class="hljs-comment">#while a&lt;10:  #循环体</span><br><span class="hljs-comment">#print (a)</span><br><span class="hljs-comment"># a+=1</span><br><span class="hljs-comment">#计算0到4之间的累加和</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">四步循环法</span><br><span class="hljs-string">1，初始化的变量</span><br><span class="hljs-string">2，条件判断</span><br><span class="hljs-string">3，条件执行体（循环体）</span><br><span class="hljs-string">4，改变变量</span><br><span class="hljs-string">总结：初始化的变量与条件判断的变量为同一个&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">sum</span>=<span class="hljs-number">0</span><span class="hljs-comment">#用来存储累加和</span><br><span class="hljs-string">&#x27;&#x27;&#x27;初始化变量为0&#x27;&#x27;&#x27;</span><br>q=<span class="hljs-number">0</span><br><span class="hljs-string">&#x27;&#x27;&#x27;条件判断&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">while</span> q&lt;<span class="hljs-number">5</span>:<br>    <span class="hljs-string">&#x27;&#x27;&#x27;条件执行体（循环体）&#x27;&#x27;&#x27;</span><br>    <span class="hljs-built_in">sum</span>+=q<br>    <span class="hljs-comment">#改变变量</span><br>    q+=<span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;和为:&#x27;</span>,<span class="hljs-built_in">sum</span>)<br></code></pre></td></tr></table></figure><hr><h1 id="循环语句练习题"><a href="#循环语句练习题" class="headerlink" title="循环语句练习题"></a>循环语句练习题</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;计算1到100之间的偶数和&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">sum</span>=<span class="hljs-number">0</span> <span class="hljs-comment">#存入偶数和</span><br><span class="hljs-string">&#x27;&#x27;&#x27;初始化变量&#x27;&#x27;&#x27;</span><br>a=<span class="hljs-number">1</span><br><span class="hljs-string">&#x27;&#x27;&#x27;条件判断&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">while</span> a&lt;=<span class="hljs-number">100</span>:<br>    <span class="hljs-string">&#x27;&#x27;&#x27;条件执行体（循环体）&#x27;&#x27;&#x27;</span><br>    <span class="hljs-comment">#条件判断是否是偶数</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">bool</span>(a%<span class="hljs-number">2</span>):      <span class="hljs-comment">#a%2==0:</span><br>        <span class="hljs-comment">#改变判断条件即可实现偶数和由奇数和的变化</span><br>        <span class="hljs-built_in">sum</span>+=a<br>        <span class="hljs-string">&#x27;&#x27;&#x27;改变变量&#x27;&#x27;&#x27;</span><br>    a+=<span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;1到100之间的偶数和&#x27;</span>,<span class="hljs-built_in">sum</span>)<br></code></pre></td></tr></table></figure><hr><h1 id="for-in语句循环"><a href="#for-in语句循环" class="headerlink" title="for-in语句循环"></a>for-in语句循环</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;python&#x27;</span>:  <span class="hljs-comment">#第一次取出来的值是p，然后将值赋值在item中，将item中输出</span><br>    <span class="hljs-built_in">print</span> (item)    <br>    <span class="hljs-comment">#range()产生一整个序列，也是一个可迭代对象</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    <span class="hljs-built_in">print</span> (i)<br>    <span class="hljs-comment">#如果在循环过程中不需要使用到自定义变量，可将自定义变量写为“_”</span><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5201314</span> ):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你好你好&#x27;</span>)<br></code></pre></td></tr></table></figure><hr><h1 id="输出100到999之间的水仙花数"><a href="#输出100到999之间的水仙花数" class="headerlink" title="输出100到999之间的水仙花数"></a>输出100到999之间的水仙花数</h1><p><strong>通过for语句循环，if进行判断，然后找出水仙花数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">   <span class="hljs-comment">#举例</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>,<span class="hljs-number">1000</span>):<br>    q=i%<span class="hljs-number">10</span><br>    shi=i//<span class="hljs-number">10</span>%<span class="hljs-number">10</span><br>    bai=i//<span class="hljs-number">100</span><br>    <span class="hljs-comment"># print(q,shi,bai )</span><br>    <span class="hljs-comment">#判断</span><br>    <span class="hljs-keyword">if</span> q**<span class="hljs-number">3</span>+shi**<span class="hljs-number">3</span>+bai**<span class="hljs-number">3</span>==i:<br>        <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><hr><h1 id="流程控制语句break"><a href="#流程控制语句break" class="headerlink" title="流程控制语句break"></a>流程控制语句break</h1><p><strong><code>break语句</code>，用于结束循环结构，通常和分支结构if一起使用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#break语句，用于结束循环结构，通常和分支结构if一起使用</span><br><span class="hljs-string">&#x27;&#x27;&#x27;要求从键盘录入密码，最多录入三次，如果正确就结束&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    q=<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入密码:&#x27;</span>)<br>    <span class="hljs-keyword">if</span> q ==<span class="hljs-string">&#x27;9999&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码正确&#x27;</span>)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码不正确&#x27;</span>)<br></code></pre></td></tr></table></figure><hr><h1 id="break语句循环体"><a href="#break语句循环体" class="headerlink" title="break语句循环体#"></a>break语句循环体#</h1><p><strong><code>break语句</code>是语句循环体，可以作为截止循环并重新进入下一次循环</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> a&lt;<span class="hljs-number">3</span>:<br>    q=<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入密码；&#x27;</span>)<br>    <span class="hljs-keyword">if</span> q==<span class="hljs-string">&#x27;0000&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码正确&#x27;</span>)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;密码不正确&#x27;</span>)<br>        a+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="流程控制语句continue"><a href="#流程控制语句continue" class="headerlink" title="流程控制语句continue"></a>流程控制语句continue</h1><p><strong><code>continue语句</code> 用于结束当前循环，进入下一次循环，通常与分支结构中的if一起使用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#continue语句 用于结束当前循环，进入下一次循环，通常与分支结构中的if一起使用，</span><br><span class="hljs-string">&#x27;&#x27;&#x27;要求输出1到50之间所有5的倍数，5，10,15,25。。。</span><br><span class="hljs-string">5的倍数的共同点：  和5的余数为0的数都是5的倍数</span><br><span class="hljs-string">要求是使用continue实现</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span>,<span class="hljs-number">51</span>): <span class="hljs-comment">#通过for循环语句，求出1到51之间的5的倍数，</span><br>    <span class="hljs-keyword">if</span> item%<span class="hljs-number">5</span>==<span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(item)<br><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;----使用coutinue----&#x27;</span>)<br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span>,<span class="hljs-number">51</span>):<br>    <span class="hljs-keyword">if</span> item%<span class="hljs-number">5</span>!=<span class="hljs-number">0</span>:<br>     <span class="hljs-keyword">continue</span> <span class="hljs-comment">#continue语句是为了结束循环，同时进入下一次循环。</span><br><span class="hljs-built_in">print</span> (item)<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初始</title>
      <link href="/post/9970.html"/>
      <url>/post/9970.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="我一直在路上，从未停止，这一篇只是为了纪念今天。"><a href="#我一直在路上，从未停止，这一篇只是为了纪念今天。" class="headerlink" title="我一直在路上，从未停止，这一篇只是为了纪念今天。"></a>我一直在路上，从未停止，这一篇只是为了纪念今天。</h2><p><strong>我相信努力总会出成绩</strong></p><div class="fj-gallery"><p>[<img src="https://s1.ax1x.com/2023/01/06/pSAvDNF.jpg" alt="pSAvDNF.jpg">]</p>          </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/16107.html"/>
      <url>/post/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
